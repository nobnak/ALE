// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace ALE {
    public class ConcurrentQueue<T> {
        private Queue<T> _queue;
        private object _locker;

        public ConcurrentQueue() {
            _queue = new Queue<T>();
            _locker = new object();
        }

        public int Count {
            get {
                lock (_locker) {
                    return _queue.Count;
                }
            }
        }

        public void Enqueue(T item) {
            lock (_locker) {
                _queue.Enqueue(item);
            }
        }

        public bool TryDequeue(out T item) {
            lock (_locker) {
                if (_queue.Count == 0) {
                    item = default(T);
                    return false;
                }
                item = _queue.Dequeue();
                return true;
            }
        }
    }
}

